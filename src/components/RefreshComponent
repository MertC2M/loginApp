import React, {Component} from 'react';
import { Button, Text, View, Platform, Animated, Easing, StyleSheet, ScrollView, Slider } from 'react-native';
import  ShuffleScreen from './ShuffleScreen';

export default class SignUpScreen extends React.Component {

    static navigationOptions = ({ navigation, navigationOptions }) => {
        const { params } = navigation.state;
        return {
            title: params ? params.nickname : 'Default title name',
            /* These values are used instead of the shared configuration! */
            headerStyle: {
                backgroundColor: navigationOptions.headerTintColor,
            },
            //headerTintColor: navigationOptions.headerStyle.backgroundColor,
            headerRight: (
                <View style={{flex:1, flexDirection: 'row', justifyContent: 'space-between'}}>
                    <View style={{marginLeft: 5, marginRight: 5}}>
                        <Button
                            onPress={() => alert('This is a button!')}
                            title="Info"
                            color= {Platform.OS === 'ios'? 'red' : 'blue'}
                            style={{marginRight: 20}}
                        />
                    </View>
                    <View>
                        <Button
                            onPress={() => alert('This is a button!')}
                            title="Info"
                            color= {Platform.OS === 'ios'? 'red' : 'blue'}
                        />
                    </View>
                </View>
            ),

        };
    };

    constructor () {
        super()
        this.spinValue = new Animated.Value(0)
        this.animatedValue = new Animated.Value(0)
        this.springValue = new Animated.Value(0.3)
        this.backgroundColorAnimated = new Animated.Value(0)
    }

    componentDidMount () {
        this.spin()
        this.animate()
        this.spring()
        this.colorEffect()
    }

    colorEffect () {
        this.backgroundColorAnimated.setValue(0.1)
        Animated.timing(
            this.backgroundColorAnimated, {
                toValue: 150,
                duration: 2000,
                easing: Easing.linear,
            }).start(() => this.colorEffect());
    }

    spring () {
        this.springValue.setValue(0.9)
        Animated.spring(
            this.springValue,
            {
                toValue: 1,
                friction: 1
            }
        ).start(() => this.spring())
    }

    animate () {
        this.animatedValue.setValue(0)
        Animated.timing(
            this.animatedValue,
            {
                toValue: 1,
                duration: 2000,
                easing: Easing.linear
            }
        ).start(() => this.animate())
    }

    spin () {
        this.spinValue.setValue(0)
        Animated.timing(
            this.spinValue,
            {
                toValue: 1,
                duration: 3000,
                easing: Easing.linear
            }
        ).start(() => this.spin())
    }

    render () {
        const interpolateColor = this.backgroundColorAnimated.interpolate({
            inputRange: [0, 60, 160],
            outputRange: ['rgb(0, 0, 0)', 'rgb(225, 225, 51)', 'rgb(20, 10, 0)']
        })
        const animatedStyle = {
            backgroundColor: interpolateColor
        }
        const spin = this.spinValue.interpolate({
            inputRange: [0, 0.4],
            outputRange: ['0deg', '360deg']
        })
        const marginLeft = this.animatedValue.interpolate({
            inputRange: [0, 1],
            outputRange: [0, 300]
        })
        const marginCloud = this.animatedValue.interpolate({
            inputRange: [0, 0.1],
            outputRange: [0, 200]
        })
        return (
            <Animated.View style={[styles.container, animatedStyle]}>
                <Animated.View style={marginCloud}>
                    <View style={{
                        flexDirection: 'row',
                        justifyContent: 'flex-end',
                        alignItems: 'center',
                    }}>
                        <Animated.Image
                            style={{
                                width: 74,
                                height: 30,
                                resizeMode: 'stretch',
                                marginTop: 15,
                                transform: [{scale: this.springValue}],
                            }}
                            source={require('../assets/images/cloud.png')}
                        />

                        <Animated.Image
                            style={{
                                width: 96,
                                height: 60,
                                resizeMode: 'stretch',
                                marginLeft: -20,
                                transform: [{scale: this.springValue}],
                            }}
                            source={require('../assets/images/cloud.png')}
                        />
                        <Animated.Image
                            style={{
                                width: 68,
                                height: 32,
                                resizeMode: 'stretch',
                                transform: [{scale: this.springValue}],
                            }}
                            source={require('../assets/images/cloud.png')}
                        />
                        <Animated.Image
                            style={{
                                width: 46,
                                height: 22,
                                resizeMode: 'stretch',
                                marginLeft: -24,
                                transform: [{scale: this.springValue}],
                            }}
                            source={require('../assets/images/cloud.png')}
                        />
                        <Animated.Image
                            style={{
                                width: 74,
                                height: 62,
                                resizeMode: 'stretch',
                                transform: [{scale: this.springValue}],
                            }}
                            source={require('../assets/images/cloud.png')}
                        />

                        <Animated.Image
                            style={{
                                width: 74,
                                height: 62,
                                resizeMode: 'stretch',
                                transform: [{scale: this.springValue}],
                            }}
                            source={require('../assets/images/cloud.png')}
                        />

                    </View>
                </Animated.View>
                <Animated.View style={{
                    marginLeft}}>
                    <Animated.View style={styles.layerFirst}>
                        <Animated.Image
                            style={{
                                width: 120,
                                height: 60,
                                resizeMode: 'stretch'}}
                            source={require('../assets/images/car_body.png')}
                        />
                    </Animated.View>

                    <View style={styles.layerSecond}>
                        <View style={{marginRight: 48}}>
                            <Animated.Image
                                style={{
                                    width: 24,
                                    height: 24,
                                    resizeMode: 'stretch',
                                    transform: [{rotate: spin}] }}
                                source={require('../assets/images/wheel.png')}
                            />
                        </View>
                        <View style={{marginLeft: 0}}>
                            <Animated.Image
                                style={{
                                    width: 24,
                                    height: 24,
                                    transform: [{rotate: spin}] }}
                                source={require('../assets/images/wheel.png')}
                            />
                        </View>
                    </View>
                </Animated.View>
            </Animated.View>
        )
    }

}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: 'column',
        justifyContent: 'flex-start',
        alignItems: 'flex-start',
    },
    layerFirst: {
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'flex-end',
    },
    layerSecond: {
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center',
        marginTop: -29,
    },
})